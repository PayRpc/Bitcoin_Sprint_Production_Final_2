# Performance Monitoring & Benchmarking CI/CD
# Continuous performance tracking and regression detection

name: Performance Monitoring

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run performance tests weekly
    - cron: '0 3 * * 1'

jobs:
  benchmark:
    name: Performance Benchmarking
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build dependencies
        if: hashFiles('secure/rust/Cargo.toml') != ''
        working-directory: secure/rust
        run: cargo build --release

      - name: Run Go Benchmarks
        run: |
          go test -bench=. -benchmem -run=^$ ./... > benchmark-results.txt
          cat benchmark-results.txt

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Go Benchmark
          tool: 'go'
          output-file-path: benchmark-results.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: false

  load-test:
    name: Load Testing
    runs-on: ubuntu-latest
    needs: [benchmark]
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v4

      - name: Setup k6
        uses: grafana/k6-action@v0.1.0

      - name: Run load test
        run: |
          k6 run --out json=load-test-results.json scripts/load-test.js

      - name: Upload load test results
        uses: actions/upload-artifact@v4
        with:
          name: load-test-results
          path: load-test-results.json

  memory-profile:
    name: Memory Profiling
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Run memory profiling
        run: |
          go test -memprofile=mem.out -run=^$ ./...
          go tool pprof -png mem.out > memory-profile.png

      - name: Upload memory profile
        uses: actions/upload-artifact@v4
        with:
          name: memory-profile
          path: |
            mem.out
            memory-profile.png
