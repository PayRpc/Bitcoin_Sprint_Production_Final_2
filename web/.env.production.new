# Production Environment Configuration for Bitcoin Sprint Web Dashboard
# Tier-aware production configuration with automatic backend detection

# Environment Detection
NODE_ENV=production
BITCOIN_SPRINT_TIER=auto  # auto, free, business, enterprise

# Tier-Specific Backend URLs (Docker service names)
NEXT_PUBLIC_BACKEND_FREE=http://bitcoin-sprint-free:8080
NEXT_PUBLIC_BACKEND_BUSINESS=http://bitcoin-sprint-business:8082  
NEXT_PUBLIC_BACKEND_ENTERPRISE=http://bitcoin-sprint-enterprise:9000

# Production Web Ports (for Docker containers)
WEB_PORT_FREE=3000
WEB_PORT_BUSINESS=3001
WEB_PORT_ENTERPRISE=3002

# Dynamic Backend URL (detected at runtime)
NEXT_PUBLIC_API_URL=http://bitcoin-sprint-free:8080/api  # Default to FREE
GO_API_URL=http://bitcoin-sprint-free:8080              # Default to FREE
NEXT_PUBLIC_BACKEND_URL=http://bitcoin-sprint-free:8080  # Default to FREE

# Tier-Specific API Keys (matching backend configurations)
BITCOIN_SPRINT_FREE_API_KEY=free-api-key-changeme
BITCOIN_SPRINT_BUSINESS_API_KEY=business-api-key-changeme
BITCOIN_SPRINT_ENTERPRISE_API_KEY=enterprise-api-key-changeme

# Active API Key (will be set dynamically based on detected tier)
API_KEY=free-api-key-changeme

# Database
DATABASE_URL="postgresql://sprint:sprint@postgres:5432/sprint_db"

# Admin Secret (for admin-protected endpoints)
ADMIN_SECRET="bitcoin-sprint-admin-secret-2025-docker"

# Bitcoin Sprint Configuration
BITCOIN_RPC_URL=http://bitcoin-core:8332
BITCOIN_RPC_USER=sprint
BITCOIN_RPC_PASS=sprint_password_2025

# Redis Configuration
REDIS_URL=redis://redis:6379

# Entropy Bridge Configuration
ENTROPY_BRIDGE_ENABLED=true
RUST_ENTROPY_FALLBACK=true

# Maintenance Mode (set to 'true' to enable)
MAINTENANCE_MODE=false
MAINTENANCE_REASON="Scheduled maintenance"
MAINTENANCE_STARTED_AT=""
MAINTENANCE_DURATION="2 hours"

# Security Settings
CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:3002,http://bitcoin-sprint-web:3000,http://bitcoin-sprint-web:3001,http://bitcoin-sprint-web:3002
RATE_LIMIT_ENABLED=true
LOG_LEVEL=info

# Monitoring Configuration (updated ports)
PROMETHEUS_URL=http://prometheus:9090
GRAFANA_URL=http://grafana:3003

# Service Health Check
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30s

# Backend Health Check Configuration
AUTO_TIER_DETECTION=true
TIER_DETECTION_LOG=true
FALLBACK_TO_FREE=true
HEALTH_CHECK_RETRIES=3
HEALTH_CHECK_TIMEOUT=2000   # 2 seconds
